spring.application.name=produit-service

spring.output.ansi.enabled = always

logging.level.fr.formation = DEBUG

spring.datasource.url = jdbc:mysql://localhost:3306/service_produit
spring.datasource.username = root
spring.datasource.password = root

spring.jpa.generate-ddl = true

server.port = 8081

eureka.client.service-url.defaultZone = http://localhost:9000/eureka/

# Configuration CircuitBreaker
resilience4j.circuitbreaker.configs.default.failure-rate-threshold = 50
resilience4j.circuitbreaker.configs.default.minimum-number-of-calls = 3
resilience4j.circuitbreaker.configs.default.permitted-number-of-calls-in-half-open-state = 10
resilience4j.circuitbreaker.configs.default.wait-duration-in-open-state = 5s
resilience4j.circuitbreaker.configs.default.sliding-window-size = 5
resilience4j.circuitbreaker.configs.default.sliding-window-type = count-based
resilience4j.circuitbreaker.configs.default.slow-call-duration-threshold = 1s
resilience4j.circuitbreaker.configs.default.slow-call-rate-threshold = 50
resilience4j.circuitbreaker.configs.default.record-exceptions = java.util.concurrent.TimeoutException

spring.cloud.openfeign.circuitbreaker.enabled = true
spring.cloud.openfeign.circuitbreaker.alphanumeric-ids.enabled = true

# Configuration Bulkhead - ce qu'on choisit quand l'appel API ne fonctionne pas
resilience4j.bulkhead.instances.produitsService.max-wait-duration = 1
resilience4j.bulkhead.instances.produitsService.max-concurrent-calls = 10

resilience4j.thread-pool-bulkhead.instances.produitsService.max-thread-pool-size = 10
resilience4j.thread-pool-bulkhead.instances.produitsService.core-thread-pool-size = 10
resilience4j.thread-pool-bulkhead.instances.produitsService.queue-capacity = 5
